(window.webpackJsonp=window.webpackJsonp||[]).push([[2,4],{44:function(e,t,a){"use strict";a.r(t),a.d(t,"metadata",(function(){return r}));const r=[{date:"2019-10-14",title:"Corner Twister",desc:"A cube of oscillators is slowly twisted"},{date:"2019-10-13",title:"Centered Trochoid Chain",desc:"A Spirograph attached to a Spirograph"},{date:"2019-10-12",title:"Torus Knot",desc:"A more intricate path on the surface of a torus"},{date:"2019-10-11",title:"Torus Loop",desc:"A path spinning around the surface of a torus"},{date:"2019-10-10",title:"3D Fourier Spheres",desc:"A sum of points rotating along spheres, analagous to the 2Dfourier series case"},{date:"2019-10-09",title:"Throbbing Sphere",desc:"A spiral around a sphere... except the sphere is growing and shrinking."},{date:"2019-10-08",title:"2D Fourier Series",desc:"In 2D, Fourier Series can be thought of as a sum of rotating vectors."},{date:"2019-10-07",title:"Box vs. Sphere",desc:"Taking the centroid of two paths combines them into a shape that exhibits features of both."},{date:"2019-10-06",title:"Fourier Ring",desc:"A rough approximation of a square wave wrapped around a cylinder."},{date:"2019-10-05",title:"Spiral Sphere",desc:"A particle is rotated around a point on multiple axes at once."},{date:"2019-10-04",title:"Fourier Oscillator",desc:"A sum of sines on two axes, and a a square wave in the third."},{date:"2019-10-03",title:"Cylindrical Oscillator",desc:"A particle oscillates independently on all 3 axes. If the settings are chosen carefully, the particle can be confined to a cylinder."},{date:"2019-10-02",title:"Average Box",desc:"A bunch of points oscillate on the edges of a box. What shape does the centroid of those points make?"},{date:"2019-10-01",title:"Gear Train Turntable",desc:"Gears rotate a turntable and the ends of a sliding arm. A pen attached to the arm draws on the turntable."}]},58:function(e,t,a){"use strict";a.r(t);var r=a(0),n=a(61),s=a(62),i=a(67),o=a(70),_=a(63),h=a(85),p=a(65),l=a(72);class c extends n.a{get default_parameters(){return{parent:void 0,trace_length:4e3,palette:new l.a,palette_freq:.5}}init(e){const t=new s.a({parent:e.parent,offset:r.r.Zero(),show_offset:!1}),a=new h.a({parent:t.to_joint("translate")}),n=new p.a({parent:a.to_joint("scale")}),i=new _.a({source:n.to_joint("translate"),origin:t.to_joint("translate"),num_points:e.trace_length,palette:e.palette,palette_freq:e.palette_freq});return this.add_part(t),this.add_part(a),this.add_part(n),this.add_part(i),t}}var d=a(83),u=a(82),f=a(76),w=a(29),g=a(64);a(68);class m extends f.a{get default_parameters(){super.default_parameters;return{offset_angle:0}}init(e){super.init(e);const t=this.parent.part;this.angular_velocity=-t.radius/this.radius*t.angular_velocity;const a=e.offset_angle,n=this.radius+t.radius,s=n*Math.cos(a),i=n*Math.sin(a);this.offset=new r.r(s,0,i)}get part_type(){return"driven-wheel"}}var v=a(66),q=a(71);class j extends v.a{get default_parameters(){return{parents:void 0}}init(e){[this.start_parent,this.end_parent]=Object(q.a)(e,"parents")}get transform_names(){return["rotate","scale"]}get parents(){return[this.start_parent.part,this.end_parent.part]}get arm_vector(){const e=this.start_parent.position,t=this.end_parent.position,a=t.subtract(e).length(),n=this.start_parent.inverse_matrix,s=r.r.TransformCoordinates(t,n);return{arm_len:a,angle:-Math.atan2(s.z,s.x)}}build(e){const t=this.arm_vector,a=new w.a(`${this.id}-rotate`,e);a.rotation.y=t.angle,a.parent=this.start_parent.node,this.rotate=a;const n=new w.a(`${this.id}-scale`,e);n.scaling.x=t.arm_len,n.parent=a,this.scale=n;const s=g.a.CreateLines(`${this.id}-line`,{points:[r.r.Zero(),new r.r(1,0,0)]},e);s.parent=n,this.arm_primitive=s}update(e){const t=this.arm_vector;this.rotate.rotation.y=t.angle,this.scale.scaling.x=t.arm_len}}class x extends n.a{get default_parameters(){return{parent:void 0,radii:[1,2,3,5],half_height:.1,phases:[0,0,0,0],contact_angles:[Math.PI/4,-Math.PI/4,0],angular_velocity:5,arm_gears:[0,3],arm_offsets:[new r.r(1,.2,0),new r.r(2,.2,1)],pen_offset:new r.r(3,0,2.5),trace_length:1e3}}make_gears(e,t){const a=[],n=e.half_height,s=e.radii;for(let i=0;i<s.length;i++){const o=s[i],_=e.phases[i];if(0===i){const s=new f.a({parent:t.to_joint("translate"),radius:o,offset:r.r.Zero(),initial_angle:_,half_height:n,angular_velocity:e.angular_velocity});a.push(s)}else{const t=new m({parent:a[i-1].to_joint("translate"),radius:o,offset_angle:e.contact_angles[i-1],initial_angle:_,half_height:n});a.push(t)}}return a}make_arm_points(e,t){const[a,r]=e.arm_gears,[n,i]=e.arm_offsets,o=t[a],_=t[r];return[new s.a({parent:o.to_joint("rotate"),offset:n,show_offset:!0}),new s.a({parent:_.to_joint("rotate"),offset:i,show_offset:!0})]}init(e){const t=new s.a,a=this.make_gears(e,t),r=this.make_arm_points(e,a),n=new j({parents:r.map(e=>e.to_joint("translate"))}),i=new s.a({parent:n.to_joint("rotate"),offset:e.pen_offset,show_offset:!0}),o=new _.a({source:i.to_joint("translate"),target:a[1].to_joint("rotate"),origin:a[1].to_joint("rotate"),num_points:e.trace_length});return this.add_part(t),this.add_parts(a),this.add_parts(r),this.add_part(n),this.add_part(i),this.add_part(o),t}}var k=a(84),b=a(80),y=a(73);class A extends n.a{get default_parameters(){return{parent:void 0,radii:[2.5,2,-.1],angular_frequencies:[2,3],offset:new r.r(1.3,0,0),trace_length:4e3,time_step:.005}}make_trochoids(e,t){const a=[],r=e.angular_frequencies.length,n=e.radii;let s=t.to_joint("translate");for(let t=0;t<r;t++){const r=new y.a({parent:s,angular_frequency:e.angular_frequencies[t],frame_radius:n[t],frame_phase:0,wheel_radius:n[t+1],wheel_phase:0,show_radii:!0});a.push(r),s=r.to_joint("rotate_wheel")}return a}init(e){this._time_step=e.time_step;const t=new s.a({parent:e.parent,offset:r.r.Zero(),show_offset:!1}),a=this.make_trochoids(e,t),n=a[a.length-1];n.offset=e.offset;const i=new _.a({source:n.to_joint("translate_offset"),origin:t.to_joint("translate"),num_points:e.trace_length});return this.add_part(t),this.add_parts(a),this.add_part(i),t}get time_step(){return this._time_step}}var M=a(69),I=a(79);class S extends n.a{get default_parameters(){return{parent:void 0,amplitudes:[.5,.5],frequencies:[2,4],phases:[0,0],twist_frequencies:[.25,.5],half_height:2,waves:[new M.a,new M.a],trace_length:8e3}}get_corner_offsets(e){const t=e;return[new r.r(t,0,t),new r.r(-t,0,t),new r.r(-t,0,-t),new r.r(t,0,-t)]}make_twists(e,t){return t.map((a,n)=>new p.a({parent:t[n].to_joint("translate"),axes:[new r.r(0,1,0)],angular_frequencies:[e.twist_frequencies[n]],phases:[0,0],show_offset:!1}))}make_offsets(e,t){return this.get_corner_offsets(e.half_height).map(e=>new s.a({parent:t.to_joint("rotate"),offset:e,show_offset:!0}))}make_oscillators(e,t,a){return t.map(t=>new i.a({parent:t.to_joint("translate"),amplitude:e.amplitudes[a],phase:e.phases[a],direction:new r.r(0,1,0),frequency:e.frequencies[a],wave:e.waves[a]}))}make_centroids(e,t,a){return t.map((t,r)=>{const n=a[r];return new o.a({points:[t.to_joint("translate_wave"),n.to_joint("translate_wave")],origin:e.to_joint("translate"),weights:[1,1]})})}make_traces(e,t,a){return a.map(a=>new _.a({source:a.to_joint("translate"),origin:t.to_joint("translate"),num_points:e.trace_length}))}init(e){const t=new s.a({parent:e.parent,offset:r.r.Zero()}),a=new s.a({parent:t.to_joint("translate"),offset:new r.r(0,e.half_height,0)}),n=new s.a({parent:t.to_joint("translate"),offset:new r.r(0,-e.half_height,0)}),[i,o]=this.make_twists(e,[a,n]),_=this.make_offsets(e,i),h=this.make_offsets(e,o),p=this.make_oscillators(e,_,0),l=this.make_oscillators(e,h,1),c=this.make_centroids(t,p,l),d=this.make_traces(e,t,c);return this.add_part(t),this.add_parts([a,n]),this.add_parts([i,o]),this.add_parts(_),this.add_parts(h),this.add_parts(p),this.add_parts(l),this.add_parts(c),this.add_parts(d),t}}var T=a(77),P=a(86),C=a(78),F=a(44);a.d(t,"machines",(function(){return Z})),a.d(t,"metadata",(function(){return F.metadata}));const Z=[new S({amplitudes:[.5,.5],frequencies:[2,4],phases:[0,0],twist_frequencies:[.25,-.5],half_height:2,waves:[new M.a,new M.a],trace_length:8e3}),new A({parent:void 0,radii:[2.5,2,-.1],angular_frequencies:[2,3],offset:new r.r(1.3,0,0),trace_length:4e3,time_step:.005}),new u.a({axes:[new r.r(0,1,0),new r.r(0,0,1)],amplitudes:[1,.5],angular_frequencies:[23,37],phases:[0,0],time_step:.005,trace_length:2e3}),new u.a({axes:[new r.r(0,1,0),new r.r(0,0,1)],amplitudes:[2,.5],angular_frequencies:[1,100],phases:[0,0],time_step:.0025,trace_length:1e4}),new u.a({axes:[new r.r(0,1,0),new r.r(0,0,1),new r.r(0,1,0),new r.r(0,0,1)],angular_frequencies:[2,4,10,13],trace_length:1e3,time_step:.01,palette:new l.a({biases:[0,.8,.8,1],amplitudes:[0,.5,.5,0],frequencies:[0,3,5,1],phases:[0,0,0,0]})}),new c({palette:new l.a({biases:[.7,.4,0,1],amplitudes:[.2,.1,1,0],frequencies:[4,3,5,1],phases:[0,0,0,0]}),palette_freq:.5}),new u.a({amplitudes:[4,3,2,1],angular_frequencies:[1,1.25,3.25,4.5].map(e=>e*Math.PI/4),axes:[new r.r(0,1,0),new r.r(0,1,0),new r.r(0,1,0),new r.r(0,1,0)],trace_length:4e3,time_step:.01,palette:new l.a({biases:[0,.8,.8,1],amplitudes:[0,.5,.5,0],frequencies:[0,3,5,1],phases:[0,0,0,0]})}),new d.a({parts:[new P.a({machine:new b.a({part:new p.a({radius:2,axes:[new r.r(0,1,0),new r.r(0,0,1)],angular_frequencies:[5,3]}),trace_length:1e3,palette_freq:1})}),new P.a({machine:new k.a({frequencies:[3,3,3,3,4,4,4,4,7,7,7,7].map(e=>e/10)})})],joint_names:["part.translate","centroid.translate"],offsets:[new r.r(8,0,0),new r.r(-8,0,0)],weights:[1,1],trace_length:5e3}),function(){const e=new C.a({amplitudes:[1,1/3,.2,1/7],frequencies:[1,3,5,7]});return new b.a({part:new T.a({amplitudes:new r.r(1,1,1),frequencies:new r.r(1,4,1),phases:new r.r(0,0,Math.PI/2),waves:[new M.a,e,new M.a]}),trace_joint:"translate_wave",time_step:.001,palette_freq:1})}(),new b.a({part:new p.a({radius:2,axes:[new r.r(0,1,0),new r.r(0,0,1)],angular_frequencies:[.1,2],phases:[0,0]}),trace_length:4e3}),function(){const e=new C.a({amplitudes:[1,.5,.25,1/8],frequencies:[1,2,3,4]}),t=new C.a({amplitudes:[1,2,4,8],frequencies:[1,2,3,4]});return new b.a({part:new T.a({amplitudes:new r.r(3,1,2),frequencies:new r.r(1,100,1),phases:new r.r(0,0,Math.PI/2),waves:[e,new I.a,t]}),trace_joint:"translate_wave",trace_length:1e3,time_step:.001,palette_freq:1})}(),new b.a({part:new T.a({amplitudes:new r.r(.5,6,.5),frequencies:new r.r(4,.05,4),phases:new r.r(0,0,Math.PI/2),waves:[new M.a,new M.a,new M.a]}),trace_joint:"translate_wave",trace_length:2e3,time_step:.01}),new k.a({size:new r.r(4,4,4),frequencies:[.1,.2,.3,.4,.5,.6,.7,.8,.9,1,1.1,1.2],weights:[1,.5,.5,1,1,.5,.5,1,1,.5,.5,1],phases:[0,0,0,0,1,1,1,1,2,2,2,2].map(e=>e*Math.PI/4),trace_length:750}),new x({angular_velocity:4,half_height:.1,radii:[2,5,3,7],phases:[0,0,0,0],contact_angles:[4,2,3].map(e=>e*Math.PI/4),arm_gears:[0,3],arm_offsets:[new r.r(1,.2,.1),new r.r(0,.2,1.5)],pen_offset:new r.r(4,0,4),trace_length:4e3})]}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[2,4],{44:function(e,t,a){"use strict";a.r(t),a.d(t,"metadata",(function(){return n}));const n=[{date:"2019-10-08",title:"2D Fourier Series",desc:"In 2D, Fourier Series can be thought of as a sum of rotating vectors."},{date:"2019-10-07",title:"Box vs. Sphere",desc:"Taking the centroid of two paths combines them into a shape that exhibits features of both."},{date:"2019-10-06",title:"Fourier Ring",desc:"A rough approximation of a square wave wrapped around a cylinder."},{date:"2019-10-05",title:"Spiral Sphere",desc:"A particle is rotated around a point on multiple axes at once."},{date:"2019-10-04",title:"Fourier Oscillator",desc:"A sum of sines on two axes, and a a square wave in the third."},{date:"2019-10-03",title:"Cylindrical Oscillator",desc:"A particle oscillates independently on all 3 axes. If the settings are chosen carefully, the particle can be confined to a cylinder."},{date:"2019-10-02",title:"Average Box",desc:"A bunch of points oscillate on the edges of a box. What shape does the centroid of those points make?"},{date:"2019-10-01",title:"Gear Train Turntable",desc:"Gears rotate a turntable and the ends of a sliding arm. A pen attached to the arm draws on the turntable."}]},58:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a(79),s=a(78),i=a(63),o=a(64),l=a(29),h=a(61),p=a(66),c=a(62);class _ extends c.a{get default_parameters(){return{radius:1,half_height:.1,offset:n.r.Zero(),initial_angle:0,angular_velocity:1,parent:void 0}}init(e){super.init(e),this.radius=e.radius,this.half_height=e.half_height,this.offset=e.offset,this.initial_angle=e.initial_angle,this.angular_velocity=e.angular_velocity,this.angle=this.initial_angle}get transform_names(){return["translate","rotate","scale"]}get primitive_names(){return["wheel_primitive"]}get part_type(){return"wheel"}build(e){const t=new l.a(`${this.id}-translate`,e);t.position=this.offset,void 0!==this.parent&&(t.parent=this.parent.node),this.translate=t;const a=new l.a(`${this.id}-rotate`,e);a.rotation.y=this.angle,a.parent=t,this.rotate=a;const r=new l.a(`${this.id}-scale`,e);r.scaling=new n.r(this.radius,this.half_height,this.radius),r.parent=a,this.scale=r;const s=h.a.CreateCylinder(`${this.id}-wheel`,{diameter:2,height:2},e);s.material=new p.a(`${this.id}-mat-grid`,e),s.parent=r,this.wheel_primitive=s}update(e){this.angle=this.angular_velocity*e+this.initial_angle,this.rotate.rotation.y=this.angle}}class d extends _{get default_parameters(){super.default_parameters;return{offset_angle:0}}init(e){super.init(e);const t=this.parent.part;this.angular_velocity=-t.radius/this.radius*t.angular_velocity;const a=e.offset_angle,r=this.radius+t.radius,s=r*Math.cos(a),i=r*Math.sin(a);this.offset=new n.r(s,0,i)}get part_type(){return"driven-wheel"}}var u=a(68);class f extends c.a{get default_parameters(){return{parents:void 0}}init(e){[this.start_parent,this.end_parent]=Object(u.a)(e,"parents")}get transform_names(){return["rotate","scale"]}get parents(){return[this.start_parent.part,this.end_parent.part]}get arm_vector(){const e=this.start_parent.position,t=this.end_parent.position,a=t.subtract(e).length(),r=this.start_parent.inverse_matrix,s=n.r.TransformCoordinates(t,r);return{arm_len:a,angle:-Math.atan2(s.z,s.x)}}build(e){const t=this.arm_vector,a=new l.a(`${this.id}-rotate`,e);a.rotation.y=t.angle,a.parent=this.start_parent.node,this.rotate=a;const r=new l.a(`${this.id}-scale`,e);r.scaling.x=t.arm_len,r.parent=a,this.scale=r;const s=h.a.CreateLines(`${this.id}-line`,{points:[n.r.Zero(),new n.r(1,0,0)]},e);s.parent=r,this.arm_primitive=s}update(e){const t=this.arm_vector;this.rotate.rotation.y=t.angle,this.scale.scaling.x=t.arm_len}}var w=a(65);class g extends i.a{get default_parameters(){return{parent:void 0,radii:[1,2,3,5],half_height:.1,phases:[0,0,0,0],contact_angles:[Math.PI/4,-Math.PI/4,0],angular_velocity:5,arm_gears:[0,3],arm_offsets:[new n.r(1,.2,0),new n.r(2,.2,1)],pen_offset:new n.r(3,0,2.5),trace_length:1e3}}make_gears(e,t){const a=[],r=e.half_height,s=e.radii;for(let i=0;i<s.length;i++){const o=s[i],l=e.phases[i];if(0===i){const s=new _({parent:t.to_joint("translate"),radius:o,offset:n.r.Zero(),initial_angle:l,half_height:r,angular_velocity:e.angular_velocity});a.push(s)}else{const t=new d({parent:a[i-1].to_joint("translate"),radius:o,offset_angle:e.contact_angles[i-1],initial_angle:l,half_height:r});a.push(t)}}return a}make_arm_points(e,t){const[a,n]=e.arm_gears,[r,s]=e.arm_offsets,i=t[a],l=t[n];return[new o.a({parent:i.to_joint("rotate"),offset:r,show_offset:!0}),new o.a({parent:l.to_joint("rotate"),offset:s,show_offset:!0})]}init(e){const t=new o.a,a=this.make_gears(e,t),n=this.make_arm_points(e,a),r=new f({parents:n.map(e=>e.to_joint("translate"))}),s=new o.a({parent:r.to_joint("rotate"),offset:e.pen_offset,show_offset:!0}),i=new w.a({source:s.to_joint("translate"),target:a[1].to_joint("rotate"),origin:a[1].to_joint("rotate"),num_points:e.trace_length});return this.add_part(t),this.add_parts(a),this.add_parts(n),this.add_part(r),this.add_part(s),this.add_part(i),t}}var m=a(80),v=a(75),y=a(81),x=a(69),b=a(82),q=a(67),j=a(74),M=a(83),I=a(71),k=a(44);a.d(t,"machines",(function(){return P})),a.d(t,"metadata",(function(){return k.metadata}));const P=[new s.a({amplitudes:[4,3,2,1],angular_frequencies:[1,1.25,3.25,4.5].map(e=>e*Math.PI/4),axes:[new n.r(0,1,0),new n.r(0,1,0),new n.r(0,1,0),new n.r(0,1,0)],trace_length:4e3,time_step:.01,palette:new I.a({biases:[0,.8,.8,1],amplitudes:[0,.5,.5,0],frequencies:[0,3,5,1],phases:[0,0,0,0]})}),new r.a({parts:[new b.a({machine:new v.a({part:new x.a({radius:2,axes:[new n.r(0,1,0),new n.r(0,0,1)],angular_frequencies:[5,3]}),trace_length:1e3,palette_freq:1})}),new b.a({machine:new m.a({frequencies:[3,3,3,3,4,4,4,4,7,7,7,7].map(e=>e/10)})})],joint_names:["part.translate","centroid.translate"],offsets:[new n.r(8,0,0),new n.r(-8,0,0)],weights:[1,1],trace_length:5e3}),function(){const e=new M.a({amplitudes:[1,1/3,.2,1/7],frequencies:[1,3,5,7]});return new v.a({part:new y.a({amplitudes:new n.r(1,1,1),frequencies:new n.r(1,4,1),phases:new n.r(0,0,Math.PI/2),waves:[new q.a,e,new q.a]}),trace_joint:"translate_wave",time_step:.001,palette_freq:1})}(),new v.a({part:new x.a({radius:2,axes:[new n.r(0,1,0),new n.r(0,0,1)],angular_frequencies:[.1,2],phases:[0,0]}),trace_length:4e3}),function(){const e=new M.a({amplitudes:[1,.5,.25,1/8],frequencies:[1,2,3,4]}),t=new M.a({amplitudes:[1,2,4,8],frequencies:[1,2,3,4]});return new v.a({part:new y.a({amplitudes:new n.r(3,1,2),frequencies:new n.r(1,100,1),phases:new n.r(0,0,Math.PI/2),waves:[e,new j.a,t]}),trace_joint:"translate_wave",trace_length:1e3,time_step:.001,palette_freq:1})}(),new v.a({part:new y.a({amplitudes:new n.r(.5,6,.5),frequencies:new n.r(4,.05,4),phases:new n.r(0,0,Math.PI/2),waves:[new q.a,new q.a,new q.a]}),trace_joint:"translate_wave",trace_length:2e3,time_step:.01}),new m.a({size:new n.r(4,4,4),frequencies:[.1,.2,.3,.4,.5,.6,.7,.8,.9,1,1.1,1.2],weights:[1,.5,.5,1,1,.5,.5,1,1,.5,.5,1],phases:[0,0,0,0,1,1,1,1,2,2,2,2].map(e=>e*Math.PI/4),trace_length:750}),new g({angular_velocity:4,half_height:.1,radii:[2,5,3,7],phases:[0,0,0,0],contact_angles:[4,2,3].map(e=>e*Math.PI/4),arm_gears:[0,3],arm_offsets:[new n.r(1,.2,.1),new n.r(0,.2,1.5)],pen_offset:new n.r(4,0,4),trace_length:4e3})]}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[1,3],{44:function(t,e,r){"use strict";r.r(e),r.d(e,"metadata",(function(){return i}));const i=[{date:"2019-10-01",title:"Gear Train Turntable",desc:"Gears rotate a turntable and the ends of a sliding arm. A pen attached to the arm draws on the turntable."}]},58:function(t,e,r){"use strict";r.r(e);var i=r(0),s=r(63),a=r(64),n=r(29),o=r(61),h=r(66),p=r(62);class l extends p.a{get default_parameters(){return{radius:1,half_height:.1,offset:i.r.Zero(),initial_angle:0,angular_velocity:1,parent:void 0}}init(t){super.init(t),this.radius=t.radius,this.half_height=t.half_height,this.offset=t.offset,this.initial_angle=t.initial_angle,this.angular_velocity=t.angular_velocity,this.angle=this.initial_angle}get transform_names(){return["translate","rotate","scale"]}get primitive_names(){return["wheel_primitive"]}get part_type(){return"wheel"}build(t){const e=new n.a(`${this.id}-translate`,t);e.position=this.offset,void 0!==this.parent&&(e.parent=this.parent.node),this.translate=e;const r=new n.a(`${this.id}-rotate`,t);r.rotation.y=this.angle,r.parent=e,this.rotate=r;const s=new n.a(`${this.id}-scale`,t);s.scaling=new i.r(this.radius,this.half_height,this.radius),s.parent=r,this.scale=s;const a=o.a.CreateCylinder(`${this.id}-wheel`,{diameter:2,height:2},t);a.material=new h.a(`${this.id}-mat-grid`,t),a.parent=s,this.wheel_primitive=a}update(t){this.angle=this.angular_velocity*t+this.initial_angle,this.rotate.rotation.y=this.angle}}class _ extends l{get default_parameters(){super.default_parameters;return{offset_angle:0}}init(t){super.init(t);const e=this.parent.part;this.angular_velocity=-e.radius/this.radius*e.angular_velocity;const r=t.offset_angle,s=this.radius+e.radius,a=s*Math.cos(r),n=s*Math.sin(r);this.offset=new i.r(a,0,n)}get part_type(){return"driven-wheel"}}var d=r(67);class u extends p.a{get default_parameters(){return{parents:void 0}}init(t){[this.start_parent,this.end_parent]=Object(d.a)(t,"parents")}get transform_names(){return["rotate","scale"]}get parents(){return[this.start_parent.part,this.end_parent.part]}get arm_vector(){const t=this.start_parent.position,e=this.end_parent.position,r=e.subtract(t).length(),s=this.start_parent.inverse_matrix,a=i.r.TransformCoordinates(e,s);return{arm_len:r,angle:-Math.atan2(a.z,a.x)}}build(t){const e=this.arm_vector,r=new n.a(`${this.id}-rotate`,t);r.rotation.y=e.angle,r.parent=this.start_parent.node,this.rotate=r;const s=new n.a(`${this.id}-scale`,t);s.scaling.x=e.arm_len,s.parent=r,this.scale=s;const a=o.a.CreateLines(`${this.id}-line`,{points:[i.r.Zero(),new i.r(1,0,0)]},t);a.parent=s,this.arm_primitive=a}update(t){const e=this.arm_vector;this.rotate.rotation.y=e.angle,this.scale.scaling.x=e.arm_len}}var c=r(65);class f extends s.a{get default_parameters(){return{parent:void 0,radii:[1,2,3,5],half_height:.1,phases:[0,0,0,0],contact_angles:[Math.PI/4,-Math.PI/4,0],angular_velocity:5,arm_gears:[0,3],arm_offsets:[new i.r(1,.2,0),new i.r(2,.2,1)],pen_offset:new i.r(3,0,2.5),trace_length:1e3}}make_gears(t,e){const r=[],s=t.half_height,a=t.radii;for(let n=0;n<a.length;n++){const o=a[n],h=t.phases[n];if(0===n){const a=new l({parent:e.to_joint("translate"),radius:o,offset:i.r.Zero(),initial_angle:h,half_height:s,angular_velocity:t.angular_velocity});r.push(a)}else{const e=new _({parent:r[n-1].to_joint("translate"),radius:o,offset_angle:t.contact_angles[n-1],initial_angle:h,half_height:s});r.push(e)}}return r}make_arm_points(t,e){const[r,i]=t.arm_gears,[s,n]=t.arm_offsets,o=e[r],h=e[i];return[new a.a({parent:o.to_joint("rotate"),offset:s,show_offset:!0}),new a.a({parent:h.to_joint("rotate"),offset:n,show_offset:!0})]}init(t){const e=new a.a,r=this.make_gears(t,e),i=this.make_arm_points(t,r),s=new u({parents:i.map(t=>t.to_joint("translate"))}),n=new a.a({parent:s.to_joint("rotate"),offset:t.pen_offset,show_offset:!0}),o=new c.a({source:n.to_joint("translate"),target:r[1].to_joint("rotate"),origin:r[1].to_joint("rotate"),num_points:t.trace_length});return this.add_part(e),this.add_parts(r),this.add_parts(i),this.add_part(s),this.add_part(n),this.add_part(o),e}}var g=r(44);r.d(e,"machines",(function(){return m})),r.d(e,"metadata",(function(){return g.metadata}));const m=[new f({angular_velocity:4,half_height:.1,radii:[2,5,3,7],phases:[0,0,0,0],contact_angles:[4,2,3].map(t=>t*Math.PI/4),arm_gears:[0,3],arm_offsets:[new i.r(1,.2,.1),new i.r(0,.2,1.5)],pen_offset:new i.r(4,0,4),trace_length:4e3})]},62:function(t,e,r){"use strict";var i=r(0);class s{constructor(t,e){this.part=t,this.node_name=e}get node(){return this.part[this.node_name]}get matrix(){return this.node.getWorldMatrix()}get inverse_matrix(){return i.g.Invert(this.matrix)}get position(){return i.r.TransformCoordinates(i.r.Zero(),this.matrix)}}r.d(e,"a",(function(){return n}));let a=0;class n{static make_id(){const t=a;return a++,t}constructor(t){this.init({...this.default_parameters,...t}),this.id=`${this.part_type}-${n.make_id()}`}get part_type(){return"part"}get transform_names(){return[]}get primitive_names(){return[]}get default_parameters(){return{parent:void 0}}change_parent(t){this.parent=t}init(t){this.parent=t.parent}get parents(){return void 0!==this.parent?[this.parent.part]:[]}update(t){}build(t){}to_joint(t){return new s(this,t)}}},63:function(t,e,r){"use strict";r.d(e,"a",(function(){return i}));class i{constructor(t){this.part_table=new Map,this.vertices=[],this.edges=new Map,this.labels=new Map,this.is_sorted=!0,this.root_part=this.init({...this.default_parameters,...t})}get machine_type(){return"machine"}get default_parameters(){return{parent:void 0}}get time_step(){return 1/60}add_edge(t,e){this.edges.has(t)||this.edges.set(t,[]),this.edges.get(t).push(e)}add_part(t,e){const r=t.id;this.vertices.push(r),this.part_table.set(r,t),this.labels.set(e,r),this.is_sorted=!1;for(let e of t.parents){const t=e.id;this.add_edge(t,r)}}add_parts(t){for(let e of t)this.add_part(e)}get_part(t){return this.part_table.get(t)}find_part(t){const e=this.labels.get(t);return this.get_part(e)}postorder(t,e,r){if(e.has(t))return;e.add(t);const i=this.edges.get(t)||[];for(let t of i)this.postorder(t,e,r);r.push(t)}get is_empty(){return 0==this.vertices.length}topological_sort(){if(this.is_empty)return;const t=new Set,e=[];for(let r of this.vertices)this.postorder(r,t,e);e.reverse(),this.vertices=e}*parts(){this.is_sorted||(this.topological_sort(),this.is_sorted=!0);for(let t of this.vertices)yield this.part_table.get(t)}init(t){}build(t){let e=void 0;for(let r of this.parts()){const i=r.build(t);void 0===e&&(e=i)}return e}update(t){for(let e of this.parts())e.update(t)}}},64:function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var i=r(0),s=r(29),a=r(61),n=r(62);class o extends n.a{get default_parameters(){return{offset:i.r.Zero(),parent:void 0,show_offset:!1}}init(t){super.init(t),this.offset=t.offset,this.show_offset=t.show_offset}get part_type(){return"point"}get transform_names(){return["translate"]}get primitive_names(){return["line"]}make_line(t){return a.a.CreateLines(`${this.id}-line`,{points:[i.r.Zero(),this.offset.negate()]},t)}build(t){const e=new s.a(`${this.id}-translate`,t);if(e.position=this.offset,void 0!==this.parent&&(e.parent=this.parent.node),this.translate=e,this.show_offset){const r=this.make_line(t);r.parent=e,this.line=r}return e}}},65:function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var i=r(0),s=(r(29),r(61)),a=r(62),n=r(67);class o extends a.a{get default_parameters(){return{source:void 0,target:void 0,origin:void 0,num_points:1e3,color:new i.d(1,.5,0,1)}}init(t){this.source=Object(n.a)(t,"source"),this.target=t.target,this.origin=Object(n.a)(t,"origin"),this.points=[],this.num_points=t.num_points,this.color=t.color}get primitive_names(){return["polyline_primitive"]}init_points(){const t=[],e=this.compute_point();for(let r=0;r<this.num_points;r++)t.push(e);return t}get part_type(){return"trace"}get parents(){const t=[this.source.part,this.origin.part];return void 0!==this.target&&t.push(this.target.part),t}build(t){const e=this.init_points(),r=s.a.CreateLines(`${this.id}-polyline`,{colors:Array(e.length).fill(this.color),updatable:!0,points:e},t);r.parent=this.origin.node,this.polyline_primitive=r,this.points=e}compute_point(){let t=this.source.position;if(void 0!==this.target){const e=this.target.inverse_matrix;t=i.r.TransformCoordinates(t,e)}else{const e=this.origin.inverse_matrix;t=i.r.TransformCoordinates(t,e)}return t}update(t){const e=this.points,r=this.compute_point();e.push(r),e.shift(),this.polyline_primitive=s.a.CreateLines(`${this.id}-polyline`,{instance:this.polyline_primitive,points:e})}}},67:function(t,e,r){"use strict";function i(t,e){const r=t[e];if(null==r)throw new Error(`${e} is required`);return r}r.d(e,"a",(function(){return i}))}}]);